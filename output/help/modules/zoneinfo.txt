Help on package zoneinfo:

NAME
    zoneinfo

MODULE REFERENCE
    https://docs.python.org/3.9/library/zoneinfo
    
    The following documentation is automatically generated from the Python
    source files.  It may be incomplete, incorrect or include features that
    are considered implementation detail and may vary between Python
    implementations.  When in doubt, consult the module reference at the
    location listed above.

PACKAGE CONTENTS
    _common
    _tzpath
    _zoneinfo

CLASSES
    builtins.KeyError(builtins.LookupError)
        zoneinfo._common.ZoneInfoNotFoundError
    builtins.RuntimeWarning(builtins.Warning)
        zoneinfo._tzpath.InvalidTZPathWarning
    datetime.tzinfo(builtins.object)
        ZoneInfo
    
    class InvalidTZPathWarning(builtins.RuntimeWarning)
     |  Warning raised if an invalid path is specified in PYTHONTZPATH.
     |  
     |  Method resolution order:
     |      InvalidTZPathWarning
     |      builtins.RuntimeWarning
     |      builtins.Warning
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.RuntimeWarning:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from builtins.RuntimeWarning:
     |  
     |  __new__(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  __delattr__(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |  
     |  __reduce__(...)
     |      Helper for pickle.
     |  
     |  __repr__(self, /)
     |      Return repr(self).
     |  
     |  __setattr__(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  __setstate__(...)
     |  
     |  __str__(self, /)
     |      Return str(self).
     |  
     |  with_traceback(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  __cause__
     |      exception cause
     |  
     |  __context__
     |      exception context
     |  
     |  __dict__
     |  
     |  __suppress_context__
     |  
     |  __traceback__
     |  
     |  args
    
    class ZoneInfo(datetime.tzinfo)
     |  Method resolution order:
     |      ZoneInfo
     |      datetime.tzinfo
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |  
     |  __reduce__(...)
     |      Function for serialization with the pickle protocol.
     |  
     |  __repr__(self, /)
     |      Return repr(self).
     |  
     |  __str__(self, /)
     |      Return str(self).
     |  
     |  dst(...)
     |      Retrieve a timedelta representing the amount of DST applied in a zone at the given datetime.
     |  
     |  fromutc(...)
     |      Given a datetime with local time in UTC, retrieve an adjusted datetime in local time.
     |  
     |  tzname(...)
     |      Retrieve a string containing the abbreviation for the time zone that applies in a zone at a given datetime.
     |  
     |  utcoffset(...)
     |      Retrieve a timedelta representing the UTC offset in a zone at the given datetime.
     |  
     |  ----------------------------------------------------------------------
     |  Class methods defined here:
     |  
     |  __init_subclass__(...) from builtins.type
     |      Function to initialize subclasses.
     |  
     |  clear_cache(...) from builtins.type
     |      Clear the ZoneInfo cache.
     |  
     |  from_file(...) from builtins.type
     |      Create a ZoneInfo file from a file object.
     |  
     |  no_cache(...) from builtins.type
     |      Get a new instance of ZoneInfo, bypassing the cache.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods defined here:
     |  
     |  __new__(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  key
    
    class ZoneInfoNotFoundError(builtins.KeyError)
     |  Exception raised when a ZoneInfo key is not found.
     |  
     |  Method resolution order:
     |      ZoneInfoNotFoundError
     |      builtins.KeyError
     |      builtins.LookupError
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.KeyError:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __str__(self, /)
     |      Return str(self).
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from builtins.LookupError:
     |  
     |  __new__(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  __delattr__(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |  
     |  __reduce__(...)
     |      Helper for pickle.
     |  
     |  __repr__(self, /)
     |      Return repr(self).
     |  
     |  __setattr__(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  __setstate__(...)
     |  
     |  with_traceback(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  __cause__
     |      exception cause
     |  
     |  __context__
     |      exception context
     |  
     |  __dict__
     |  
     |  __suppress_context__
     |  
     |  __traceback__
     |  
     |  args

FUNCTIONS
    __dir__()
    
    __getattr__(name)
    
    available_timezones()
        Returns a set containing all available time zones.
        
        .. caution::
        
            This may attempt to open a large number of files, since the best way to
            determine if a given file on the time zone search path is to open it
            and check for the "magic string" at the beginning.
    
    reset_tzpath(to=None)

DATA
    TZPATH = ()
    __all__ = ['ZoneInfo', 'reset_tzpath', 'available_timezones', 'TZPATH'...

FILE
    c:\program files\python39\lib\zoneinfo\__init__.py


